[package]
name = "net"
version = "0.0.1"
edition = "2021"
publish = false

[lib]
# MIRI is not happy with doctest on x86_64-unknown-linux-gnu for some reason.
# TODO: re-enable doctest by default as soon as miri bug is fixed
doctest = false

#[[bench]]
#name = "parse"
#harness = false

[features]
default = ["serde", "tracing_max_level_trace", "tracing_release_max_level_debug"]

# Enable serialization and deserialization of most of the types in this crate.
serde = ["dep:serde"]

# Enable fuzz testing.
# Enable this flag only if you wish to use the type generators defined in this crate
# in a downstream crate.
bolero = ["dep:bolero", "etherparse/std"]

# Ensure the compiler proves marked functions never panic.
# This only works with optimization, LTO, and codegen-units=1.
# This feature is internal.
# It is not intended for (nor is it useful for) shipped release builds.
_no_panic = ["dep:no-panic", "tracing_max_level_off", "tracing_release_max_level_off"]

# This is internal and should not be used by end users.
# This is exclusively intended for writing kani proofs while calming the rage of the IDE.
_fake_kani = ["dep:kani"]

tracing_max_level_debug = ["tracing/max_level_debug"]
tracing_max_level_error = ["tracing/max_level_error"]
tracing_max_level_info = ["tracing/max_level_info"]
tracing_max_level_off = ["tracing/max_level_off"]
tracing_max_level_trace = ["tracing/max_level_trace"]
tracing_max_level_warn = ["tracing/max_level_warn"]

tracing_release_max_level_debug = ["tracing/release_max_level_debug"]
tracing_release_max_level_error = ["tracing/release_max_level_error"]
tracing_release_max_level_info = ["tracing/release_max_level_info"]
tracing_release_max_level_off = ["tracing/release_max_level_off"]
tracing_release_max_level_trace = ["tracing/release_max_level_trace"]
tracing_release_max_level_warn = ["tracing/release_max_level_warn"]

[dependencies]

# internal

# fake-kani to calm IDEs
kani = { workspace = true, optional = true }

# external
bolero = { workspace = true, optional = true, features = [] }
etherparse = { workspace = true, default-features = false, features = ["std"] } # TODO: try to do without std feature
no-panic = { workspace = true, optional = true }
serde = { workspace = true, optional = true }
thiserror = { workspace = true }
tracing = { workspace = true }
arrayvec = { workspace = true, default-features = false, features = [] }

[dev-dependencies]
bolero = { workspace = true, features = [] }
criterion = { workspace = true }
etherparse = { workspace = true, default-features = false, features = ["std"] }
tracing-test = { workspace = true }
# fake-kani to calm IDEs
kani = { workspace = true }

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(kani)'] }
