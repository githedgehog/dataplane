#!/usr/bin/env bash

# This script generates a gen-sysroot for the DPDK build system. It is intended to
# be run on a system with the same architecture as the target system. The
# gen-sysroot is generated by copying the necessary files from the target system
# into a directory structure that can be used by the DPDK build system.

# The script takes a single argument, which is the path to the directory where
# the gen-sysroot should be generated. If the directory does not exist, it will be
# created. If the directory is not empty, the script will exit with an error.

set -euxo pipefail

declare script_dir
script_dir="$(readlink --canonicalize-existing "$(dirname "$(readlink --canonicalize-existing "${0}")")")"
declare -r script_dir

echo "${script_dir}"

die() {
  >&2 printf -- "%s" "${*}"
  exit 1
}

pushd "${script_dir}"

declare compile_mode="${1:-}"


if [[ "${compile_mode}" = "release" ]]; then
  declare -r compile_mode="release"
  source "./release-mode.env"
else
  declare -r compile_mode="debug"
  source "./debug-mode.env"
fi

shift


declare sysroot_dir
sysroot_dir="$(readlink --canonicalize-existing "${script_dir}/../..")/sysroot/${compile_mode}"
declare -r sysroot_dir

declare -r regen_sysroot="${1:-}"

if [[ "${regen_sysroot}" = "--regen-sysroot=yes" && -d "${sysroot_dir}" ]]; then
  printf -- "--regen-sysroot flag accepted, removing directory %s\n" "${sysroot_dir}"
  rm -fr "${sysroot_dir}"
  shift
fi

[[ -d "${sysroot_dir}" ]] && die "Directory %s already exists, exiting\n" "${sysroot_dir}"

mkdir --parent "${sysroot_dir}"
docker build \
  --pull \
  --build-arg=CC="${CC}" \
  --build-arg=CFLAGS="${CFLAGS}" \
  --build-arg=CXX="${CXX}" \
  --build-arg=LD="${LD}" \
  --build-arg=LDFLAGS="${LDFLAGS}" \
  --tag "dpdk-sysroot-${compile_mode}" --file "${script_dir}/Dockerfile" "${script_dir}"
# clean up any prior sysroot
docker rm "dpdk-sysroot-${compile_mode}" || true
docker create --name "dpdk-sysroot-${compile_mode}" "dpdk-sysroot-${compile_mode}" true
docker export "dpdk-sysroot-${compile_mode}" | tar xf - -C "${sysroot_dir}"
