[package]
name = "dataplane-mgmt"
version = "0.1.0"
edition = "2024"
publish = false
license = "Apache-2.0"

[[test]]
name = "reconcile"
path = "tests/reconcile.rs"
required-features = ["bolero"]

[features]
default = []
bolero = ["dep:bolero", "interface-manager/bolero", "id/bolero", "net/bolero"]

[dependencies]
# internal
gateway_config = { workspace = true }
id = { workspace = true }
interface-manager = { workspace = true }
net = { workspace = true }
nat = { workspace = true }
rekon = { workspace = true }
routing = { workspace = true }

# external
async-trait = { workspace = true }
bolero = { workspace = true, optional = true, default-features = false, features = ["alloc"] }
bytes = { workspace = true }
caps = { workspace = true, default-features = false, features = [] }
chrono = { workspace = true }
derive_builder = { workspace = true, default-features = false, features = ["default"] }
futures = { workspace = true, features = ["default"] }
multi_index_map = { workspace = true, features = ["serde"] }
netdev = { workspace = true }
rtnetlink = { workspace = true, features = ["default", "tokio"] }
serde = { workspace = true, features = ["rc", "derive"] }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["macros", "rt", "sync", "time"] }
tokio-stream = { workspace = true }
tonic = { workspace = true }
tracing = { workspace = true, features = ["attributes"] }
tracing-test = { workspace = true }

[dev-dependencies]
# internal
fixin = { workspace = true }
id = { workspace = true, features = ["bolero"] }
interface-manager = { workspace = true, features = ["bolero"] }
net = { workspace = true, features = ["bolero"] }
routing = { workspace = true, features = ["testing"] }
test-utils = { workspace = true }
pipeline = { workspace = true }

# external
bolero = { workspace = true, default-features = false, features = ["alloc"] }
iptrie = { workspace = true }
gateway_config = { workspace = true, features = ["bolero"] }
pretty_assertions = { workspace = true }
tracing-test = { workspace = true, features = [] }
caps = { workspace = true }
