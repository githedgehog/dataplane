# The primary point of this workflow is to ensure that the developer experience is good.
# We take a very vanilla ubuntu image, install all necessary dependencies via "normal" means,
# and then run the build and test steps as described in the README.md file.

# The artifacts produced by these builds are not intended to be used for anything other than
# ensuring that the developer experience is good.

# Production artifacts are produced in a sterile environment (in another CI workflow).

name: Developer Experience
on:
  pull_request:
    branches:
      - main
      - dpdk-sys/update

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  just: 1.36.0

permissions:
  contents: write
  packages: read
  id-token: write
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        rust:
          - toolchain: stable
            optional: false
          - toolchain: beta
            optional: true
          - toolchain: nightly
            optional: true
    continue-on-error: ${{ matrix.rust.optional }}
    runs-on: ubuntu-latest
    timeout-minutes: 180
    steps:
      - name: login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: install just
        uses: extractions/setup-just@v2
        with:
          just-version: ${{env.just}}
      - name: install rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{matrix.rust.toolchain}}
          targets: x86_64-unknown-linux-gnu,x86_64-unknown-linux-musl
      - name: Checkout
        uses: actions/checkout@v4
      - name: refresh-compile-env
        run: just --yes refresh-compile-env
      - run: just --yes fake-nix
      - run: just cargo +${{matrix.rust.toolchain}} build --profile=debug --target=x86_64-unknown-linux-gnu
        continue-on-error: ${{ matrix.rust.optional }}
      - run: just cargo +${{matrix.rust.toolchain}} test --profile=debug --target=x86_64-unknown-linux-gnu
        continue-on-error: ${{ matrix.rust.optional }}
      - run: just cargo +${{matrix.rust.toolchain}} build --profile=debug --target=x86_64-unknown-linux-musl
        continue-on-error: ${{ matrix.rust.optional }}
      - run: just cargo +${{matrix.rust.toolchain}} test --profile=debug --target=x86_64-unknown-linux-musl
        continue-on-error: ${{ matrix.rust.optional }}

      - run: just cargo +${{matrix.rust.toolchain}} build --profile=release --target=x86_64-unknown-linux-gnu
        continue-on-error: ${{ matrix.rust.optional }}
#      - run: just cargo +${{matrix.rust.toolchain}} test --profile=release --target=x86_64-unknown-linux-gnu
#        continue-on-error: ${{ matrix.rust.optional }}
      - run: just cargo +${{matrix.rust.toolchain}} build --profile=release --target=x86_64-unknown-linux-musl
        continue-on-error: ${{ matrix.rust.optional }}
#      - run: just cargo +${{matrix.rust.toolchain}} test --profile=release --target=x86_64-unknown-linux-musl
#        continue-on-error: ${{ matrix.rust.optional }}
